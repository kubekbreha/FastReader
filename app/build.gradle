apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'jacoco'


ext {
    coverageSourceDirs = 'src/test/java'
}

jacoco {
    toolVersion = "0.7.5.201505241946"
    reportsDir = file("$buildDir/reports")
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewBinder*.*',
                       '**/*$InjectAdapter*.*',
                       '**/*Injector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/*Test*.*',
                       '**/*Activity*.*',
                       '**/CiMattersApplication*.*',
                       'android/**/*.*']
    )

    if (project.hasProperty("teamcity")) {
        println '##teamcity[jacocoReport dataPath=\'app/build/jacoco/testDebugUnitTest.exec\' includes=\'com.vgaidarji.cimatters.*\' excludes=\'com.vgaidarji.cimatters.test.* **/*R*.* **/*Injector*.* **/*Activity*.* .*R .*CiMattersApplication .*BuildConfig .*Activity .*Test \']'
    }

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/testDebugUnitTest.exec")

    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $.
    doFirst {
        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}


android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.kubekbreha.fastreader"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


repositories {
    maven {
        url "http://dl.bintray.com/lukaville/maven"
    }
    maven {
        url "http://dl.bintray.com/dasar/maven"
    }

}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //epub lib-1
    implementation 'com.github.mertakdut:EpubParser:1.0.95'
    implementation 'nl.siegmann.epublib:epub-core:1.0@aar'

    //material file picker
    implementation 'com.nbsp:library:1.8'

    //anko
    implementation "org.jetbrains.anko:anko:0.10.5"

    //sql lite
    implementation "org.jetbrains.anko:anko-sqlite:0.10.5"

    //InfiniteCycleViewPager
    implementation 'com.github.devlight:infinitecycleviewpager:1.0.2'

    //card
    implementation 'com.android.support:cardview-v7:27.1.1'

    //pdfToText
    implementation 'com.itextpdf:itextg:5.5.10'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'


}
